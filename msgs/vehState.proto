// See README.txt for information and build instructions.
//
// Note: START and END tags are used in comments to define sections used in
// tutorials.  They are not part of the syntax for Protocol Buffers.
//
// To get an in-depth walkthrough of this file and the related examples, see:
// https://developers.google.com/protocol-buffers/docs/tutorials

// [START declaration]
syntax = "proto3";

import "basic.proto";

package sim_msg;
// [END declaration]

// [START messages]



message VehicleState { 
	message Wheel4{
		double frontLeft=1;
		double frontRight=2;
		double rearLeft=3;
		double rearRight=4;
	}

	message WheelContact{
		Vec3 fl = 1;
		Vec3 fr = 2;
		Vec3 rr = 3;
		Vec3 rl = 4;
	}

	enum GEAR_MODE{
		NO_CONTROL=0;  
		PARK=1;  
		REVERSE=2;
		NEUTRAL=3; 
		DRIVE=4;
	}

	message Door4{
		int32 frontLeft=1;
		int32 frontRight=2;
		int32 rearLeft=3;
		int32 rearRight=4;
	}

	message PowerTrainState{
		GEAR_MODE gead_mode=1;                	//gear lever, PRND, 1,2,3,4
		int32 total_mileage=7;             		//vehicle total mileage, unit km
		double engine_speed=21;                 //engine speed, unit rpm
		double accpedal_position=22;            //throttle position, unit %
		int32 gear_engaged=43;				 	//actual gear of gear box, -1~6
	}
	message BodyState{
		int32 SAS_Status=8;                  //airbag status
		bool LeftTurnSigLampSts=9;           //left turn lamp status
		bool RightTurnSigLampSts=10;         //right turn lamp status
		bool BrakePedSts=11;                 //brake pedal status
		Door4 DoorStatus=14;                 //door status
		double ACAmbtTemp=23;                //indoor temperature, deg
	}

	message ChassisState{
		Wheel4 tire_pressure = 1;
		double SteeringWheelAngle=28;        	//steering angle, unit deg
		double SteeringWheelAngleSign=29;    	//steering angle sign
		double ESP_MasterCylindBrakePress=30;	//brake cylinder pressure
		Wheel4 wheel_speed = 5;					//wheel speed, m/s
		double VehDynYawRate=35;             	//yaw rateï¼Œunit rad/s
		double BrakePedalPos=36;	     		//brake pedal postion, %
		bool ESPFailSts=12;                     //EPS failure status
		bool EspFuncOffSts=13;                  //ESP on/off status
		WheelContact wheel_contact=14;			//wheel contact in wgs84
	}

	double time_stamp = 1;			//unit s

	ChassisState chassis_state=2;
	PowerTrainState	powertrain_state=3;
	BodyState	body_state=4;
}

//gear lever for saic
/*
enum GEAR_LEVER_SAIC{
	D = 5;
	N = 6;
	R = 7;
	P = 8;
}
*/

//vehicle state for saic
message VehicleStateSAIC{
	double steerWheelAngleFeedback = 1; 	//steer wheel angle, deg
	double steerTrq = 2;					//steer torque, n/m, not used
	double vx = 3;							//vehicle speed, km/h
	int32 gearLever = 4;					//gear lever
	int32 epbState = 5;						//epb state, , not used
	double avz = 6;							//augluar velocity of z, deg/s
	double ax = 7;							//acceleration of x, m/s2
	int32 brakeHoldSts = 8;					//brake hold pressure status, , not used
	double accPedal = 9;					//acc pedal position, , not used
	double motorTrqF =10;					//motor torque f, n/m
	double motorTrqR1 =11;					//motor torque r1, n/m
	double motorTrqR2 =12;					//motor torque r2, n/m
	double brakeCylinderPressure = 13;		//master brake cylinder pressure, bar, not used
}

// [END messages]
