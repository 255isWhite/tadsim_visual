

// See README.txt for information and build instructions.
//
// Note: START and END tags are used in comments to define sections used in
// tutorials.  They are not part of the syntax for Protocol Buffers.
//
// To get an in-depth walkthrough of this file and the related examples, see:
// https://developers.google.com/protocol-buffers/docs/tutorials
// [START declaration]
syntax = "proto3";
import "basic.proto";
import "header.proto";
package sim_msg;
// [END declaration]

// [START messages]
//classification type
/*uint16 TYPE_UNCLASSIFIED = 0*/
/*uint16 TYPE_UNKNOWN_SMALL = 1*/
/*uint16 TYPE_UNKNOWN_BIG = 2*/
/*uint16 TYPE_PEDESTRIAN = 3*/
/*uint16 TYPE_BIKE = 4*/
/*uint16 TYPE_CAR = 5*/
/*uint16 TYPE_TRUCK = 6*/
/*uint16 TYPE_STATIC = 7*/
/*uint16 TYPE_RESERVED = 8*/
enum ObstacleType{
TYPE_UNCLASSIFIED = 0;
TYPE_UNKNOWN_SMALL = 1;
TYPE_UNKNOWN_BIG = 2;
TYPE_PEDESTRIAN = 3;
TYPE_BIKE = 4;
TYPE_CAR = 5;
TYPE_TRUCK = 6;
TYPE_STATIC = 7;
TYPE_RESERVED = 8;
}

message Obstacle {
int32 id = 1;
ObstacleType classification = 2;
double timestamp = 3;
Vec3  box_center = 4; //x,y,z
Vec3  box_size = 5;  //length width height(in m)
float  yaw  = 6;     //box orientation angle from x axis, counter clockwise(in rad),range -pi to pi
Vec3  velocity = 7; //in m/s, vx, vy, vz

float  absolute_longitude_v = 8;   // along lane speed, m/s
float  absolute_lateral_v  = 9;    // vertical to lane speed, left positive, m/s
float  absolute_longitude_a  = 10;  //in m/s2, longitudinal acc

float  dl = 11;                    //in m, lateral distance to ego vehicle along lane 
float  confidence = 12;             //cofidence of obstacle position
}

message Obstacles {
Header header = 1;
repeated Obstacle obstacles = 2;
}
